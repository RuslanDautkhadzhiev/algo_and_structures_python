#-------------------------------------------------------------------------------
# Name:        task2
# Purpose: #Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6.
# Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака.
# Объяснить полученный результат.
#
# Author:      DautkhadzhievRKH
#
# Created:     09.03.2019
# Copyright:   (c) DautkhadzhievRKH 2019
# Licence:     <your licence>
#-------------------------------------------------------------------------------

# приводим числа к двоичному виду
a = 5
print("%d = %s" % (a, bin(a)))
b = 6
print("%d = %s" % (b, bin(b)))

print("%d & %d = %d (%s)" % (a, b, a & b, bin(a & b))) # логическое умножение (И)
print("%d | %d = %d (%s)" % (a, b, a | b, bin(a | b))) # логическое сложение (ИЛИ)
print("%d ^ %d = %d (%s)" % (a, b, a ^ b, bin( a ^ b))) # исключающее "ИЛИ"
print("%d << 2 = %d (%s)" % (a, a << 2, bin(a << 2))) # побитовый сдвиг влево на два знака
print("%d >> 2 = %d (%s)" % (a, a >> 2, bin(a >> 2))) # побитовый сдвиг вправо на два знака

'''
Первые логические операции можно выполнить, используя знания таблиц истинности (из алгебры логики).

Логическое умножение "И":
101
110
----
100
Двоичное число 100 - это десятичное число 4.

Логическое сложение "ИЛИ":
101
110
---
111 - это число 7.

"Исключающее ИЛИ":
101
110
----
011 - это число 3.


При побитовом (логическом) сдвиге числа 5 (дв. 101) влево на два знака получаем число 10100 (дес. 20).
При таком сдвиге уходящий бит исчезает, не влияя на оставшиеся биты, а на месте появившегося бита записывается бит 0.

При сдвиге вправо получаем 101 >> 001, но т.к. начальные (незначащие) нули отбрасываются, то остается 1.
'''
